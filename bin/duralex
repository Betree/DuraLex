#!/usr/bin/env python
# -*- coding=utf-8 -*-

import codecs
import os
import json
import sys
import argparse
import urllib

sys.path.append(os.path.join(os.path.realpath(os.path.dirname(__file__)), '..'))

import duralex.alinea_parser
import duralex.bill_parser
from duralex.DeleteEmptyChildrenVisitor import DeleteEmptyChildrenVisitor
from duralex.DeleteParentVisitor import DeleteParentVisitor
from duralex.SortReferencesVisitor import SortReferencesVisitor
from duralex.ResolveFullyQualifiedReferencesVisitor import ResolveFullyQualifiedReferencesVisitor
from duralex.ResolveFullyQualifiedDefinitionsVisitor import ResolveFullyQualifiedDefinitionsVisitor
from duralex.AddArcheoLexFilenameVisitor import AddArcheoLexFilenameVisitor
from duralex.AddEditCursorVisitor import AddEditCursorVisitor
from duralex.AddDiffVisitor import AddDiffVisitor

def handle_data(data, diff, url):
    if data[0] == u'{':
        data = json.loads(data)
    else:
        data = duralex.bill_parser.parse_bill(data, url)
    ast = duralex.alinea_parser.parse_json_data(data)

    ResolveFullyQualifiedDefinitionsVisitor().visit(ast)
    ResolveFullyQualifiedReferencesVisitor().visit(ast)
    SortReferencesVisitor().visit(ast)
    DeleteParentVisitor().visit(ast)
    DeleteEmptyChildrenVisitor().visit(ast)

    if diff:
        AddArcheoLexFilenameVisitor().visit(ast)
        AddDiffVisitor().visit(ast)

    json_data = json.dumps(ast, sort_keys=True, indent=2, ensure_ascii=False).encode('utf-8')
    sys.stdout.write(json_data)

def main(argv=None):
    parser = argparse.ArgumentParser(prog='duralex')
    parser.add_argument('--file', help='the path of the bill to process', type=argparse.FileType('r'), default='-')
    parser.add_argument('--url', help='the URL of the bill to process')
    parser.add_argument('--diff', action='store_true', help='compute a diff for each edit')

    args = parser.parse_args()

    if args.file:
        data = args.file.read()
    elif args.url:
        data = urllib.urlopen(args.url).read()

    # For some reason, the &nbsp; HTML entity will break the decoding.
    data = data.replace('&nbsp;', ' ')

    try:
        data = data.decode('utf8')
    except:
        try:
            data = data.decode('iso-8859-1')
        except:
            pass

    handle_data(data, args.diff, args.url)

    return 0

if __name__ == "__main__":
    sys.exit(main())
